import Head from "next/head";
import React, { useState } from "react";
import Image from "next/image";
import styles from "../../styles/Home.module.css";
import { url } from "../../lib/env";
import {
  Grid,
  Paper,
  TextField,
  Button,
  Typography,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
} from "@mui/material";
import Link from "next/link";

export async function getServerSideProps() {
  const bankIDs = await fetch(url + `/api/getBankIDs`);
  const bankIDsJSON = await bankIDs.json();

  let bankInit = bankIDsJSON[0]["bankID"];

  const accountIDs = await fetch(url + `/api/getAccountIDs`);
  const accountIDsJSON = await accountIDs.json();

  let accountInit = accountIDsJSON[0]["accountID"];

  // Pass data to the page via props
  return {
    props: { bankIDsJSON, bankInit, accountIDsJSON, accountInit },
  };
}

export default function createFee(props) {
  const [bank, setBank] = useState(props.bankInit);
  const [account, setAccount] = useState(props.accountInit);
  const [feeType, setFeeType] = useState("");

  const handleCreate = async () => {
    const rawResponse = await fetch(url + "/api/createFee", {
      method: "POST",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        bank: bank,
        account: account,
        feeType: feeType,
      }),
    });

    const response = await rawResponse.json();
    if (rawResponse.status === 400) {
      alert(response.sqlMessage);
    } else if (rawResponse.status === 200) {
      alert("Success");
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Bank Management UI</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Grid container spacing={1}>
        <Grid item xs={12}>
          <h1 className={styles.title}>Create Fee</h1>
        </Grid>

        <Grid item xs={2} />
        <Grid item xs={8}>
          <FormControl fullWidth>
            <InputLabel>Bank</InputLabel>
            <Select
              label="Bank"
              value={bank}
              onChange={(e) => setBank(e.target.value)}
            >
              {props.bankIDsJSON.map((obj, i) => {
                let bankID = obj["bankID"];
                return (
                  <MenuItem key={i} value={bankID}>
                    {bankID}
                  </MenuItem>
                );
              })}
            </Select>
          </FormControl>{" "}
        </Grid>

        <Grid item xs={2} />

        <Grid item xs={2} />
        <Grid item xs={8}>
          <FormControl fullWidth>
            <InputLabel>Account</InputLabel>
            <Select
              label="Account"
              value={account}
              onChange={(e) => setAccount(e.target.value)}
            >
              {props.accountIDsJSON.map((obj, i) => {
                let accountID = obj["accountID"];
                return (
                  <MenuItem key={i} value={accountID}>
                    {accountID}
                  </MenuItem>
                );
              })}
            </Select>
          </FormControl>{" "}
        </Grid>

        <Grid item xs={2} />

        <Grid item xs={2} />
        <Grid item xs={8}>
          <TextField
            fullWidth
            value={feeType}
            label={"Fee Type"}
            onChange={(e) => {
              setFeeType(e.target.value);
            }}
          ></TextField>
        </Grid>

        <Grid item xs={2} />

        <Grid item xs={2} />

        <Grid item xs={4}>
          <Link href={"/admin/adminMenu"}>
            <Button variant="contained" color="error" fullWidth>
              Cancel
            </Button>
          </Link>
        </Grid>
        <Grid item xs={4}>
          <Button variant="contained" fullWidth onClick={handleCreate}>
            Confirm
          </Button>
        </Grid>
        <Grid item xs={2} />
      </Grid>
    </div>
  );
}
